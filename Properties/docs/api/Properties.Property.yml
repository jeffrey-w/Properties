### YamlMime:ManagedReference
items:
- uid: Properties.Property
  commentId: T:Properties.Property
  id: Property
  parent: Properties
  children:
  - Properties.Property.Deconstruct(System.String@,Properties.Value@)
  - Properties.Property.Make(System.String,Properties.Value)
  - Properties.Property.Name
  - Properties.Property.Payload
  - Properties.Property.Value
  langs:
  - csharp
  - vb
  name: Property
  nameWithType: Property
  fullName: Properties.Property
  type: Class
  source:
    remote:
      path: Properties/src/Property.cs
      branch: main
      repo: git@github.com:jeffrey-w/Properties.git
    id: Property
    path: ../src/Property.cs
    startLine: 8
  assemblies:
  - Properties
  namespace: Properties
  summary: >-
    The <code>Property</code> class represents an association between some

    <xref href="Properties.Value?text=data" data-throw-if-not-resolved="false"></xref> and a descriptive identifier.
  example: []
  syntax:
    content: public sealed class Property
    content.vb: Public NotInheritable Class [Property]
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Properties.Property.Name
  commentId: P:Properties.Property.Name
  id: Name
  parent: Properties.Property
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Property.Name
  fullName: Properties.Property.Name
  type: Property
  source:
    remote:
      path: Properties/src/Property.cs
      branch: main
      repo: git@github.com:jeffrey-w/Properties.git
    id: Name
    path: ../src/Property.cs
    startLine: 17
  assemblies:
  - Properties
  namespace: Properties
  summary: The identifier for this <code>Property</code>.
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Properties.Property.Name*
- uid: Properties.Property.Value
  commentId: P:Properties.Property.Value
  id: Value
  parent: Properties.Property
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Property.Value
  fullName: Properties.Property.Value
  type: Property
  source:
    remote:
      path: Properties/src/Property.cs
      branch: main
      repo: git@github.com:jeffrey-w/Properties.git
    id: Value
    path: ../src/Property.cs
    startLine: 20
  assemblies:
  - Properties
  namespace: Properties
  summary: The data associated with this <code>Property</code>.
  example: []
  syntax:
    content: public Value Value { get; }
    parameters: []
    return:
      type: Properties.Value
    content.vb: Public ReadOnly Property Value As Value
  overload: Properties.Property.Value*
- uid: Properties.Property.Payload
  commentId: P:Properties.Property.Payload
  id: Payload
  parent: Properties.Property
  langs:
  - csharp
  - vb
  name: Payload
  nameWithType: Property.Payload
  fullName: Properties.Property.Payload
  type: Property
  source:
    remote:
      path: Properties/src/Property.cs
      branch: main
      repo: git@github.com:jeffrey-w/Properties.git
    id: Payload
    path: ../src/Property.cs
    startLine: 26
  assemblies:
  - Properties
  namespace: Properties
  summary: >-
    The raw data that backs the <xref href="Properties.Property.Value" data-throw-if-not-resolved="false"></xref> associated with this

    <code>Property</code>.
  example: []
  syntax:
    content: public object? Payload { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Payload As Object
  overload: Properties.Property.Payload*
- uid: Properties.Property.Make(System.String,Properties.Value)
  commentId: M:Properties.Property.Make(System.String,Properties.Value)
  id: Make(System.String,Properties.Value)
  parent: Properties.Property
  langs:
  - csharp
  - vb
  name: Make(string, Value)
  nameWithType: Property.Make(string, Value)
  fullName: Properties.Property.Make(string, Properties.Value)
  type: Method
  source:
    remote:
      path: Properties/src/Property.cs
      branch: main
      repo: git@github.com:jeffrey-w/Properties.git
    id: Make
    path: ../src/Property.cs
    startLine: 42
  assemblies:
  - Properties
  namespace: Properties
  summary: >-
    Creates a new <code>Property</code> with the specified <code class="paramref">name</code> and

    <code class="paramref">value</code>.
  example: []
  syntax:
    content: public static Property Make(string name, Value value)
    parameters:
    - id: name
      type: System.String
      description: The identifier for the new <code>Property</code>.
    - id: value
      type: Properties.Value
      description: >-
        The <xref href="Properties.Value?text=data" data-throw-if-not-resolved="false"></xref> associated with the new

        <code>Property</code>.
    return:
      type: Properties.Property
      description: A new <code>Property</code>.
    content.vb: Public Shared Function Make(name As String, value As Value) As [Property]
  overload: Properties.Property.Make*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      If the specified <code class="paramref">name</code> is <code>null</code>, empty, or only

      whitespace.
  nameWithType.vb: Property.Make(String, Value)
  fullName.vb: Properties.Property.Make(String, Properties.Value)
  name.vb: Make(String, Value)
- uid: Properties.Property.Deconstruct(System.String@,Properties.Value@)
  commentId: M:Properties.Property.Deconstruct(System.String@,Properties.Value@)
  id: Deconstruct(System.String@,Properties.Value@)
  parent: Properties.Property
  langs:
  - csharp
  - vb
  name: Deconstruct(out string, out Value)
  nameWithType: Property.Deconstruct(out string, out Value)
  fullName: Properties.Property.Deconstruct(out string, out Properties.Value)
  type: Method
  source:
    remote:
      path: Properties/src/Property.cs
      branch: main
      repo: git@github.com:jeffrey-w/Properties.git
    id: Deconstruct
    path: ../src/Property.cs
    startLine: 50
  assemblies:
  - Properties
  namespace: Properties
  summary: Provides the attributes of this <code>Property</code>.
  example: []
  syntax:
    content: public void Deconstruct(out string name, out Value value)
    parameters:
    - id: name
      type: System.String
      description: The identifier of this <code>Property</code>.
    - id: value
      type: Properties.Value
      description: The data associated with this <code>Property</code>.
    content.vb: Public Sub Deconstruct(name As String, value As Value)
  overload: Properties.Property.Deconstruct*
  nameWithType.vb: Property.Deconstruct(String, Value)
  fullName.vb: Properties.Property.Deconstruct(String, Properties.Value)
  name.vb: Deconstruct(String, Value)
references:
- uid: Properties.Value
  commentId: T:Properties.Value
  parent: Properties
  href: Properties.Value.html
  name: Value
  nameWithType: Value
  fullName: Properties.Value
- uid: Properties
  commentId: N:Properties
  href: Properties.html
  name: Properties
  nameWithType: Properties
  fullName: Properties
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Properties.Property.Name*
  commentId: Overload:Properties.Property.Name
  href: Properties.Property.html#Properties_Property_Name
  name: Name
  nameWithType: Property.Name
  fullName: Properties.Property.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Properties.Property.Value*
  commentId: Overload:Properties.Property.Value
  href: Properties.Property.html#Properties_Property_Value
  name: Value
  nameWithType: Property.Value
  fullName: Properties.Property.Value
- uid: Properties.Property.Value
  commentId: P:Properties.Property.Value
  href: Properties.Property.html#Properties_Property_Value
  name: Value
  nameWithType: Property.Value
  fullName: Properties.Property.Value
- uid: Properties.Property.Payload*
  commentId: Overload:Properties.Property.Payload
  href: Properties.Property.html#Properties_Property_Payload
  name: Payload
  nameWithType: Property.Payload
  fullName: Properties.Property.Payload
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: Properties.Property.Make*
  commentId: Overload:Properties.Property.Make
  href: Properties.Property.html#Properties_Property_Make_System_String_Properties_Value_
  name: Make
  nameWithType: Property.Make
  fullName: Properties.Property.Make
- uid: Properties.Property
  commentId: T:Properties.Property
  parent: Properties
  href: Properties.Property.html
  name: Property
  nameWithType: Property
  fullName: Properties.Property
- uid: Properties.Property.Deconstruct*
  commentId: Overload:Properties.Property.Deconstruct
  href: Properties.Property.html#Properties_Property_Deconstruct_System_String__Properties_Value__
  name: Deconstruct
  nameWithType: Property.Deconstruct
  fullName: Properties.Property.Deconstruct
