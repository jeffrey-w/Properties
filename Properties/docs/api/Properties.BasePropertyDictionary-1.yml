### YamlMime:ManagedReference
items:
- uid: Properties.BasePropertyDictionary`1
  commentId: T:Properties.BasePropertyDictionary`1
  id: BasePropertyDictionary`1
  parent: Properties
  children:
  - Properties.BasePropertyDictionary`1.#ctor(System.Collections.Immutable.ImmutableDictionary{System.String,Properties.Property})
  - Properties.BasePropertyDictionary`1.ApplyToProperties(System.Func{System.Collections.Immutable.ImmutableDictionary{System.String,Properties.Property},`0})
  - Properties.BasePropertyDictionary`1.Diff(`0)
  - Properties.BasePropertyDictionary`1.HasProperty(System.String)
  - Properties.BasePropertyDictionary`1.Item(System.String)
  - Properties.BasePropertyDictionary`1.Properties
  - Properties.BasePropertyDictionary`1.WithProperties(System.Collections.Immutable.ImmutableDictionary{System.String,Properties.Property})
  - Properties.BasePropertyDictionary`1.WithProperty(System.String,Properties.Value)
  - Properties.BasePropertyDictionary`1.WithoutProperty(System.String)
  langs:
  - csharp
  - vb
  name: BasePropertyDictionary<T>
  nameWithType: BasePropertyDictionary<T>
  fullName: Properties.BasePropertyDictionary<T>
  type: Class
  source:
    id: BasePropertyDictionary
    path: /home/jeff/Repos/Properties/Properties/src/PropertyDictionary.cs
    startLine: 79
  assemblies:
  - Properties
  namespace: Properties
  summary: >-
    The <code>BasePropertyDictionary</code> class provides a minimal implementation of

    the <xref href="Properties.IPropertyDictionary%601" data-throw-if-not-resolved="false"></xref> interface.
  example: []
  syntax:
    content: 'public abstract class BasePropertyDictionary<T> : IPropertyDictionary<T> where T : IPropertyDictionary<T>'
    typeParameters:
    - id: T
      description: The natural type of this <code>BasePropertyDictionary</code>.
    content.vb: Public MustInherit Class BasePropertyDictionary(Of T As IPropertyDictionary(Of T)) Implements IPropertyDictionary(Of T)
  inheritance:
  - System.Object
  derivedClasses:
  - Properties.Tests.TestPropertyDictionary
  implements:
  - Properties.IPropertyDictionary{{T}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: BasePropertyDictionary(Of T)
  fullName.vb: Properties.BasePropertyDictionary(Of T)
  name.vb: BasePropertyDictionary(Of T)
- uid: Properties.BasePropertyDictionary`1.Item(System.String)
  commentId: P:Properties.BasePropertyDictionary`1.Item(System.String)
  id: Item(System.String)
  parent: Properties.BasePropertyDictionary`1
  langs:
  - csharp
  - vb
  name: this[string]
  nameWithType: BasePropertyDictionary<T>.this[string]
  fullName: Properties.BasePropertyDictionary<T>.this[string]
  type: Property
  source:
    id: this[]
    path: /home/jeff/Repos/Properties/Properties/src/PropertyDictionary.cs
    startLine: 82
  assemblies:
  - Properties
  namespace: Properties
  summary: >-
    Provides the <xref href="Properties.Value" data-throw-if-not-resolved="false"></xref> associated with the specified

    <xref href="Properties.Property" data-throw-if-not-resolved="false"></xref> <code class="paramref">name</code>, or the

    <xref href="Properties.Value.Empty?text=empty+value" data-throw-if-not-resolved="false"></xref> if this <code>IPropertyDictionary</code>

    contains no such association.
  example: []
  syntax:
    content: public Value this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: The identifier for the queried <xref href="Properties.Property" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Properties.Value
      description: >-
        The <xref href="Properties.Value" data-throw-if-not-resolved="false"></xref> associated with the <xref href="Properties.Property" data-throw-if-not-resolved="false"></xref> by the

        specified <code class="paramref">name</code>.
    content.vb: Public ReadOnly Default Property this[](name As String) As Value
  overload: Properties.BasePropertyDictionary`1.Item*
  implements:
  - Properties.IPropertyDictionary{{T}}.Item(System.String)
  nameWithType.vb: BasePropertyDictionary(Of T).this[](String)
  fullName.vb: Properties.BasePropertyDictionary(Of T).this[](String)
  name.vb: this[](String)
- uid: Properties.BasePropertyDictionary`1.#ctor(System.Collections.Immutable.ImmutableDictionary{System.String,Properties.Property})
  commentId: M:Properties.BasePropertyDictionary`1.#ctor(System.Collections.Immutable.ImmutableDictionary{System.String,Properties.Property})
  id: '#ctor(System.Collections.Immutable.ImmutableDictionary{System.String,Properties.Property})'
  parent: Properties.BasePropertyDictionary`1
  langs:
  - csharp
  - vb
  name: BasePropertyDictionary(ImmutableDictionary<string, Property>)
  nameWithType: BasePropertyDictionary<T>.BasePropertyDictionary(ImmutableDictionary<string, Property>)
  fullName: Properties.BasePropertyDictionary<T>.BasePropertyDictionary(System.Collections.Immutable.ImmutableDictionary<string, Properties.Property>)
  type: Constructor
  source:
    id: .ctor
    path: /home/jeff/Repos/Properties/Properties/src/PropertyDictionary.cs
    startLine: 96
  assemblies:
  - Properties
  namespace: Properties
  summary: >-
    Creates a new <code>BasePropertyDictionary</code> with the

    <xref href="Properties.Property?text=properties" data-throw-if-not-resolved="false"></xref> by the specified

    <code class="paramref">properties</code>.
  example: []
  syntax:
    content: protected BasePropertyDictionary(ImmutableDictionary<string, Property> properties)
    parameters:
    - id: properties
      type: System.Collections.Immutable.ImmutableDictionary{System.String,Properties.Property}
      description: A collection of <xref href="Properties.Property?text=properties" data-throw-if-not-resolved="false"></xref>, indexed by their name.
    content.vb: Protected Sub New(properties As ImmutableDictionary(Of String, [Property]))
  overload: Properties.BasePropertyDictionary`1.#ctor*
  nameWithType.vb: BasePropertyDictionary(Of T).New(ImmutableDictionary(Of String, Property))
  fullName.vb: Properties.BasePropertyDictionary(Of T).New(System.Collections.Immutable.ImmutableDictionary(Of String, Properties.Property))
  name.vb: New(ImmutableDictionary(Of String, Property))
- uid: Properties.BasePropertyDictionary`1.Properties
  commentId: P:Properties.BasePropertyDictionary`1.Properties
  id: Properties
  parent: Properties.BasePropertyDictionary`1
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: BasePropertyDictionary<T>.Properties
  fullName: Properties.BasePropertyDictionary<T>.Properties
  type: Property
  source:
    id: Properties
    path: /home/jeff/Repos/Properties/Properties/src/PropertyDictionary.cs
    startLine: 102
  assemblies:
  - Properties
  namespace: Properties
  summary: >-
    The <xref href="Properties.Property?text=attributes" data-throw-if-not-resolved="false"></xref> associated with this

    <code>IPropertyDictionary</code>.
  example: []
  syntax:
    content: public IEnumerable<Property> Properties { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Properties.Property}
    content.vb: Public ReadOnly Property Properties As IEnumerable(Of [Property])
  overload: Properties.BasePropertyDictionary`1.Properties*
  implements:
  - Properties.IPropertyDictionary{{T}}.Properties
  nameWithType.vb: BasePropertyDictionary(Of T).Properties
  fullName.vb: Properties.BasePropertyDictionary(Of T).Properties
- uid: Properties.BasePropertyDictionary`1.HasProperty(System.String)
  commentId: M:Properties.BasePropertyDictionary`1.HasProperty(System.String)
  id: HasProperty(System.String)
  parent: Properties.BasePropertyDictionary`1
  langs:
  - csharp
  - vb
  name: HasProperty(string)
  nameWithType: BasePropertyDictionary<T>.HasProperty(string)
  fullName: Properties.BasePropertyDictionary<T>.HasProperty(string)
  type: Method
  source:
    id: HasProperty
    path: /home/jeff/Repos/Properties/Properties/src/PropertyDictionary.cs
    startLine: 108
  assemblies:
  - Properties
  namespace: Properties
  summary: >-
    Determines whether this <code>IPropertyDictionary</code> is associated with a

    <xref href="Properties.Property" data-throw-if-not-resolved="false"></xref> by the specified <code class="paramref">name</code>.
  example: []
  syntax:
    content: public bool HasProperty(string name)
    parameters:
    - id: name
      type: System.String
      description: The identifier for the queried <xref href="Properties.Property" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if this <code>IPropertyDictionary</code> exhibits a

        <xref href="Properties.Property" data-throw-if-not-resolved="false"></xref> with the specified <code class="paramref">name</code>.
    content.vb: Public Function HasProperty(name As String) As Boolean
  overload: Properties.BasePropertyDictionary`1.HasProperty*
  implements:
  - Properties.IPropertyDictionary{{T}}.HasProperty(System.String)
  nameWithType.vb: BasePropertyDictionary(Of T).HasProperty(String)
  fullName.vb: Properties.BasePropertyDictionary(Of T).HasProperty(String)
  name.vb: HasProperty(String)
- uid: Properties.BasePropertyDictionary`1.WithProperty(System.String,Properties.Value)
  commentId: M:Properties.BasePropertyDictionary`1.WithProperty(System.String,Properties.Value)
  id: WithProperty(System.String,Properties.Value)
  parent: Properties.BasePropertyDictionary`1
  langs:
  - csharp
  - vb
  name: WithProperty(string, Value)
  nameWithType: BasePropertyDictionary<T>.WithProperty(string, Value)
  fullName: Properties.BasePropertyDictionary<T>.WithProperty(string, Properties.Value)
  type: Method
  source:
    id: WithProperty
    path: /home/jeff/Repos/Properties/Properties/src/PropertyDictionary.cs
    startLine: 114
  assemblies:
  - Properties
  namespace: Properties
  summary: >-
    Provides a new <code>IPropertyDictionary</code> with the same attributes as this one,

    in addition to the <xref href="Properties.Property" data-throw-if-not-resolved="false"></xref> by the specified

    <code class="paramref">name</code> associated with the specified

    <code class="paramref">value</code>.
  example: []
  syntax:
    content: public T WithProperty(string name, Value value)
    parameters:
    - id: name
      type: System.String
      description: The identifier for the <xref href="Properties.Property" data-throw-if-not-resolved="false"></xref> to include.
    - id: value
      type: Properties.Value
      description: The data associated with the <xref href="Properties.Property" data-throw-if-not-resolved="false"></xref> to include.
    return:
      type: '{T}'
      description: ''
    content.vb: Public Function WithProperty(name As String, value As Value) As T
  overload: Properties.BasePropertyDictionary`1.WithProperty*
  implements:
  - Properties.IPropertyDictionary{{T}}.WithProperty(System.String,Properties.Value)
  nameWithType.vb: BasePropertyDictionary(Of T).WithProperty(String, Value)
  fullName.vb: Properties.BasePropertyDictionary(Of T).WithProperty(String, Properties.Value)
  name.vb: WithProperty(String, Value)
- uid: Properties.BasePropertyDictionary`1.WithoutProperty(System.String)
  commentId: M:Properties.BasePropertyDictionary`1.WithoutProperty(System.String)
  id: WithoutProperty(System.String)
  parent: Properties.BasePropertyDictionary`1
  langs:
  - csharp
  - vb
  name: WithoutProperty(string)
  nameWithType: BasePropertyDictionary<T>.WithoutProperty(string)
  fullName: Properties.BasePropertyDictionary<T>.WithoutProperty(string)
  type: Method
  source:
    id: WithoutProperty
    path: /home/jeff/Repos/Properties/Properties/src/PropertyDictionary.cs
    startLine: 127
  assemblies:
  - Properties
  namespace: Properties
  summary: >-
    Provides a new <code>IPropertyDictionary</code> with the same attributes as this one,

    except without the <xref href="Properties.Property" data-throw-if-not-resolved="false"></xref> with the specified

    <code class="paramref">name</code>.
  example: []
  syntax:
    content: public T WithoutProperty(string name)
    parameters:
    - id: name
      type: System.String
      description: The identifier for the <xref href="Properties.Property" data-throw-if-not-resolved="false"></xref> to exclude.
    return:
      type: '{T}'
      description: A new <code>IPropertyDictionary</code>.
    content.vb: Public Function WithoutProperty(name As String) As T
  overload: Properties.BasePropertyDictionary`1.WithoutProperty*
  implements:
  - Properties.IPropertyDictionary{{T}}.WithoutProperty(System.String)
  nameWithType.vb: BasePropertyDictionary(Of T).WithoutProperty(String)
  fullName.vb: Properties.BasePropertyDictionary(Of T).WithoutProperty(String)
  name.vb: WithoutProperty(String)
- uid: Properties.BasePropertyDictionary`1.Diff(`0)
  commentId: M:Properties.BasePropertyDictionary`1.Diff(`0)
  id: Diff(`0)
  parent: Properties.BasePropertyDictionary`1
  langs:
  - csharp
  - vb
  name: Diff(T)
  nameWithType: BasePropertyDictionary<T>.Diff(T)
  fullName: Properties.BasePropertyDictionary<T>.Diff(T)
  type: Method
  source:
    id: Diff
    path: /home/jeff/Repos/Properties/Properties/src/PropertyDictionary.cs
    startLine: 133
  assemblies:
  - Properties
  namespace: Properties
  summary: >-
    Provides the <xref href="Properties.Patches.Patch" data-throw-if-not-resolved="false"></xref> that defines the changes to the

    <code class="paramref">other</code> <code>IPropertyDictionary</code> necessary to obtain this

    one.
  example: []
  syntax:
    content: public Patch Diff(T other)
    parameters:
    - id: other
      type: '{T}'
      description: The <code>IPropertyDictionary</code> to compare this one to.
    return:
      type: Properties.Patches.Patch
      description: A new <xref href="Properties.Patches.Patch" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Diff(other As T) As Patch
  overload: Properties.BasePropertyDictionary`1.Diff*
  implements:
  - Properties.IPropertyDictionary{{T}}.Diff({T})
  nameWithType.vb: BasePropertyDictionary(Of T).Diff(T)
  fullName.vb: Properties.BasePropertyDictionary(Of T).Diff(T)
- uid: Properties.BasePropertyDictionary`1.WithProperties(System.Collections.Immutable.ImmutableDictionary{System.String,Properties.Property})
  commentId: M:Properties.BasePropertyDictionary`1.WithProperties(System.Collections.Immutable.ImmutableDictionary{System.String,Properties.Property})
  id: WithProperties(System.Collections.Immutable.ImmutableDictionary{System.String,Properties.Property})
  parent: Properties.BasePropertyDictionary`1
  langs:
  - csharp
  - vb
  name: WithProperties(ImmutableDictionary<string, Property>)
  nameWithType: BasePropertyDictionary<T>.WithProperties(ImmutableDictionary<string, Property>)
  fullName: Properties.BasePropertyDictionary<T>.WithProperties(System.Collections.Immutable.ImmutableDictionary<string, Properties.Property>)
  type: Method
  source:
    id: WithProperties
    path: /home/jeff/Repos/Properties/Properties/src/PropertyDictionary.cs
    startLine: 148
  assemblies:
  - Properties
  namespace: Properties
  summary: >-
    Provides a new <code>BasePropertyDictionary</code>, with the appropriate compile-time

    type, that is associated with the <xref href="Properties.Property?text=properties" data-throw-if-not-resolved="false"></xref> by the

    specified <code class="paramref">properties</code>.
  example: []
  syntax:
    content: protected abstract T WithProperties(ImmutableDictionary<string, Property> properties)
    parameters:
    - id: properties
      type: System.Collections.Immutable.ImmutableDictionary{System.String,Properties.Property}
      description: >-
        A collection of <xref href="Properties.Property?text=properties" data-throw-if-not-resolved="false"></xref>, indexed by their unique

        identifiers.
    return:
      type: '{T}'
      description: A new <code>BasePropertyDictionary</code>.
    content.vb: Protected MustOverride Function WithProperties(properties As ImmutableDictionary(Of String, [Property])) As T
  overload: Properties.BasePropertyDictionary`1.WithProperties*
  nameWithType.vb: BasePropertyDictionary(Of T).WithProperties(ImmutableDictionary(Of String, Property))
  fullName.vb: Properties.BasePropertyDictionary(Of T).WithProperties(System.Collections.Immutable.ImmutableDictionary(Of String, Properties.Property))
  name.vb: WithProperties(ImmutableDictionary(Of String, Property))
- uid: Properties.BasePropertyDictionary`1.ApplyToProperties(System.Func{System.Collections.Immutable.ImmutableDictionary{System.String,Properties.Property},`0})
  commentId: M:Properties.BasePropertyDictionary`1.ApplyToProperties(System.Func{System.Collections.Immutable.ImmutableDictionary{System.String,Properties.Property},`0})
  id: ApplyToProperties(System.Func{System.Collections.Immutable.ImmutableDictionary{System.String,Properties.Property},`0})
  parent: Properties.BasePropertyDictionary`1
  langs:
  - csharp
  - vb
  name: ApplyToProperties(Func<ImmutableDictionary<string, Property>, T>)
  nameWithType: BasePropertyDictionary<T>.ApplyToProperties(Func<ImmutableDictionary<string, Property>, T>)
  fullName: Properties.BasePropertyDictionary<T>.ApplyToProperties(System.Func<System.Collections.Immutable.ImmutableDictionary<string, Properties.Property>, T>)
  type: Method
  source:
    id: ApplyToProperties
    path: /home/jeff/Repos/Properties/Properties/src/PropertyDictionary.cs
    startLine: 161
  assemblies:
  - Properties
  namespace: Properties
  summary: >-
    Provides a new <code>BasePropertyDictionary</code>, with the appropriate compile-time

    type, that is derived by calling the specified <code class="paramref">provider</code> on

    the <xref href="Properties.Property?text=properties" data-throw-if-not-resolved="false"></xref> associated with this

    <code>BasePropertyDictionary</code>.
  example: []
  syntax:
    content: protected T ApplyToProperties(Func<ImmutableDictionary<string, Property>, T> provider)
    parameters:
    - id: provider
      type: System.Func{System.Collections.Immutable.ImmutableDictionary{System.String,Properties.Property},{T}}
      description: >-
        A function from a collection of <xref href="Properties.Property?text=properties" data-throw-if-not-resolved="false"></xref>, indexed

        by their unique identifiers, to a concrete <code>BasePropertyDictionary</code> type.
    return:
      type: '{T}'
      description: A new <code>BasePropertyDictionary</code>
    content.vb: Protected Function ApplyToProperties(provider As Func(Of ImmutableDictionary(Of String, [Property]), T)) As T
  overload: Properties.BasePropertyDictionary`1.ApplyToProperties*
  nameWithType.vb: BasePropertyDictionary(Of T).ApplyToProperties(Func(Of ImmutableDictionary(Of String, Property), T))
  fullName.vb: Properties.BasePropertyDictionary(Of T).ApplyToProperties(System.Func(Of System.Collections.Immutable.ImmutableDictionary(Of String, Properties.Property), T))
  name.vb: ApplyToProperties(Func(Of ImmutableDictionary(Of String, Property), T))
references:
- uid: Properties.IPropertyDictionary`1
  commentId: T:Properties.IPropertyDictionary`1
  href: Properties.IPropertyDictionary-1.html
  name: IPropertyDictionary<T>
  nameWithType: IPropertyDictionary<T>
  fullName: Properties.IPropertyDictionary<T>
  nameWithType.vb: IPropertyDictionary(Of T)
  fullName.vb: Properties.IPropertyDictionary(Of T)
  name.vb: IPropertyDictionary(Of T)
  spec.csharp:
  - uid: Properties.IPropertyDictionary`1
    name: IPropertyDictionary
    href: Properties.IPropertyDictionary-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Properties.IPropertyDictionary`1
    name: IPropertyDictionary
    href: Properties.IPropertyDictionary-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Properties
  commentId: N:Properties
  href: Properties.html
  name: Properties
  nameWithType: Properties
  fullName: Properties
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Properties.IPropertyDictionary{{T}}
  commentId: T:Properties.IPropertyDictionary{`0}
  parent: Properties
  definition: Properties.IPropertyDictionary`1
  href: Properties.IPropertyDictionary-1.html
  name: IPropertyDictionary<T>
  nameWithType: IPropertyDictionary<T>
  fullName: Properties.IPropertyDictionary<T>
  nameWithType.vb: IPropertyDictionary(Of T)
  fullName.vb: Properties.IPropertyDictionary(Of T)
  name.vb: IPropertyDictionary(Of T)
  spec.csharp:
  - uid: Properties.IPropertyDictionary`1
    name: IPropertyDictionary
    href: Properties.IPropertyDictionary-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Properties.IPropertyDictionary`1
    name: IPropertyDictionary
    href: Properties.IPropertyDictionary-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Properties.Value
  commentId: T:Properties.Value
  parent: Properties
  href: Properties.Value.html
  name: Value
  nameWithType: Value
  fullName: Properties.Value
- uid: Properties.Property
  commentId: T:Properties.Property
  parent: Properties
  href: Properties.Property.html
  name: Property
  nameWithType: Property
  fullName: Properties.Property
- uid: Properties.Value.Empty
  commentId: F:Properties.Value.Empty
  href: Properties.Value.html#Properties_Value_Empty
  name: Empty
  nameWithType: Value.Empty
  fullName: Properties.Value.Empty
- uid: Properties.BasePropertyDictionary`1.Item*
  commentId: Overload:Properties.BasePropertyDictionary`1.Item
  href: Properties.BasePropertyDictionary-1.html#Properties_BasePropertyDictionary_1_Item_System_String_
  name: this
  nameWithType: BasePropertyDictionary<T>.this
  fullName: Properties.BasePropertyDictionary<T>.this
  nameWithType.vb: BasePropertyDictionary(Of T).this[]
  fullName.vb: Properties.BasePropertyDictionary(Of T).this[]
  name.vb: this[]
- uid: Properties.IPropertyDictionary{{T}}.Item(System.String)
  commentId: P:Properties.IPropertyDictionary{`0}.Item(System.String)
  parent: Properties.IPropertyDictionary{{T}}
  definition: Properties.IPropertyDictionary`1.Item(System.String)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: this[string]
  nameWithType: IPropertyDictionary<T>.this[string]
  fullName: Properties.IPropertyDictionary<T>.this[string]
  nameWithType.vb: IPropertyDictionary(Of T).this[](String)
  fullName.vb: Properties.IPropertyDictionary(Of T).this[](String)
  name.vb: this[](String)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ']'
  spec.vb:
  - uid: Properties.IPropertyDictionary{`0}.Item(System.String)
    name: this[]
    href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_Item_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Properties.IPropertyDictionary`1.Item(System.String)
  commentId: P:Properties.IPropertyDictionary`1.Item(System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: this[string]
  nameWithType: IPropertyDictionary<T>.this[string]
  fullName: Properties.IPropertyDictionary<T>.this[string]
  nameWithType.vb: IPropertyDictionary(Of T).this[](String)
  fullName.vb: Properties.IPropertyDictionary(Of T).this[](String)
  name.vb: this[](String)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ']'
  spec.vb:
  - uid: Properties.IPropertyDictionary`1.Item(System.String)
    name: this[]
    href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_Item_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Properties.BasePropertyDictionary`1.#ctor*
  commentId: Overload:Properties.BasePropertyDictionary`1.#ctor
  href: Properties.BasePropertyDictionary-1.html#Properties_BasePropertyDictionary_1__ctor_System_Collections_Immutable_ImmutableDictionary_System_String_Properties_Property__
  name: BasePropertyDictionary
  nameWithType: BasePropertyDictionary<T>.BasePropertyDictionary
  fullName: Properties.BasePropertyDictionary<T>.BasePropertyDictionary
  nameWithType.vb: BasePropertyDictionary(Of T).New
  fullName.vb: Properties.BasePropertyDictionary(Of T).New
  name.vb: New
- uid: System.Collections.Immutable.ImmutableDictionary{System.String,Properties.Property}
  commentId: T:System.Collections.Immutable.ImmutableDictionary{System.String,Properties.Property}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutabledictionary-2
  name: ImmutableDictionary<string, Property>
  nameWithType: ImmutableDictionary<string, Property>
  fullName: System.Collections.Immutable.ImmutableDictionary<string, Properties.Property>
  nameWithType.vb: ImmutableDictionary(Of String, Property)
  fullName.vb: System.Collections.Immutable.ImmutableDictionary(Of String, Properties.Property)
  name.vb: ImmutableDictionary(Of String, Property)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableDictionary`2
    name: ImmutableDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutabledictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Properties.Property
    name: Property
    href: Properties.Property.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableDictionary`2
    name: ImmutableDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutabledictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Properties.Property
    name: Property
    href: Properties.Property.html
  - name: )
- uid: System.Collections.Immutable.ImmutableDictionary`2
  commentId: T:System.Collections.Immutable.ImmutableDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutabledictionary-2
  name: ImmutableDictionary<TKey, TValue>
  nameWithType: ImmutableDictionary<TKey, TValue>
  fullName: System.Collections.Immutable.ImmutableDictionary<TKey, TValue>
  nameWithType.vb: ImmutableDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Immutable.ImmutableDictionary(Of TKey, TValue)
  name.vb: ImmutableDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableDictionary`2
    name: ImmutableDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutabledictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableDictionary`2
    name: ImmutableDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutabledictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Immutable
  commentId: N:System.Collections.Immutable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Immutable
  nameWithType: System.Collections.Immutable
  fullName: System.Collections.Immutable
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Immutable
    name: Immutable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Immutable
    name: Immutable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable
- uid: Properties.BasePropertyDictionary`1.Properties*
  commentId: Overload:Properties.BasePropertyDictionary`1.Properties
  href: Properties.BasePropertyDictionary-1.html#Properties_BasePropertyDictionary_1_Properties
  name: Properties
  nameWithType: BasePropertyDictionary<T>.Properties
  fullName: Properties.BasePropertyDictionary<T>.Properties
  nameWithType.vb: BasePropertyDictionary(Of T).Properties
  fullName.vb: Properties.BasePropertyDictionary(Of T).Properties
- uid: Properties.IPropertyDictionary{{T}}.Properties
  commentId: P:Properties.IPropertyDictionary{`0}.Properties
  parent: Properties.IPropertyDictionary{{T}}
  definition: Properties.IPropertyDictionary`1.Properties
  href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_Properties
  name: Properties
  nameWithType: IPropertyDictionary<T>.Properties
  fullName: Properties.IPropertyDictionary<T>.Properties
  nameWithType.vb: IPropertyDictionary(Of T).Properties
  fullName.vb: Properties.IPropertyDictionary(Of T).Properties
- uid: System.Collections.Generic.IEnumerable{Properties.Property}
  commentId: T:System.Collections.Generic.IEnumerable{Properties.Property}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Property>
  nameWithType: IEnumerable<Property>
  fullName: System.Collections.Generic.IEnumerable<Properties.Property>
  nameWithType.vb: IEnumerable(Of Property)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Properties.Property)
  name.vb: IEnumerable(Of Property)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Properties.Property
    name: Property
    href: Properties.Property.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Properties.Property
    name: Property
    href: Properties.Property.html
  - name: )
- uid: Properties.IPropertyDictionary`1.Properties
  commentId: P:Properties.IPropertyDictionary`1.Properties
  href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_Properties
  name: Properties
  nameWithType: IPropertyDictionary<T>.Properties
  fullName: Properties.IPropertyDictionary<T>.Properties
  nameWithType.vb: IPropertyDictionary(Of T).Properties
  fullName.vb: Properties.IPropertyDictionary(Of T).Properties
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Properties.BasePropertyDictionary`1.HasProperty*
  commentId: Overload:Properties.BasePropertyDictionary`1.HasProperty
  href: Properties.BasePropertyDictionary-1.html#Properties_BasePropertyDictionary_1_HasProperty_System_String_
  name: HasProperty
  nameWithType: BasePropertyDictionary<T>.HasProperty
  fullName: Properties.BasePropertyDictionary<T>.HasProperty
  nameWithType.vb: BasePropertyDictionary(Of T).HasProperty
  fullName.vb: Properties.BasePropertyDictionary(Of T).HasProperty
- uid: Properties.IPropertyDictionary{{T}}.HasProperty(System.String)
  commentId: M:Properties.IPropertyDictionary{`0}.HasProperty(System.String)
  parent: Properties.IPropertyDictionary{{T}}
  definition: Properties.IPropertyDictionary`1.HasProperty(System.String)
  href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_HasProperty_System_String_
  name: HasProperty(string)
  nameWithType: IPropertyDictionary<T>.HasProperty(string)
  fullName: Properties.IPropertyDictionary<T>.HasProperty(string)
  nameWithType.vb: IPropertyDictionary(Of T).HasProperty(String)
  fullName.vb: Properties.IPropertyDictionary(Of T).HasProperty(String)
  name.vb: HasProperty(String)
  spec.csharp:
  - uid: Properties.IPropertyDictionary{`0}.HasProperty(System.String)
    name: HasProperty
    href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_HasProperty_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Properties.IPropertyDictionary{`0}.HasProperty(System.String)
    name: HasProperty
    href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_HasProperty_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Properties.IPropertyDictionary`1.HasProperty(System.String)
  commentId: M:Properties.IPropertyDictionary`1.HasProperty(System.String)
  isExternal: true
  href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_HasProperty_System_String_
  name: HasProperty(string)
  nameWithType: IPropertyDictionary<T>.HasProperty(string)
  fullName: Properties.IPropertyDictionary<T>.HasProperty(string)
  nameWithType.vb: IPropertyDictionary(Of T).HasProperty(String)
  fullName.vb: Properties.IPropertyDictionary(Of T).HasProperty(String)
  name.vb: HasProperty(String)
  spec.csharp:
  - uid: Properties.IPropertyDictionary`1.HasProperty(System.String)
    name: HasProperty
    href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_HasProperty_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Properties.IPropertyDictionary`1.HasProperty(System.String)
    name: HasProperty
    href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_HasProperty_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Properties.BasePropertyDictionary`1.WithProperty*
  commentId: Overload:Properties.BasePropertyDictionary`1.WithProperty
  href: Properties.BasePropertyDictionary-1.html#Properties_BasePropertyDictionary_1_WithProperty_System_String_Properties_Value_
  name: WithProperty
  nameWithType: BasePropertyDictionary<T>.WithProperty
  fullName: Properties.BasePropertyDictionary<T>.WithProperty
  nameWithType.vb: BasePropertyDictionary(Of T).WithProperty
  fullName.vb: Properties.BasePropertyDictionary(Of T).WithProperty
- uid: Properties.IPropertyDictionary{{T}}.WithProperty(System.String,Properties.Value)
  commentId: M:Properties.IPropertyDictionary{`0}.WithProperty(System.String,Properties.Value)
  parent: Properties.IPropertyDictionary{{T}}
  definition: Properties.IPropertyDictionary`1.WithProperty(System.String,Properties.Value)
  href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_WithProperty_System_String_Properties_Value_
  name: WithProperty(string, Value)
  nameWithType: IPropertyDictionary<T>.WithProperty(string, Value)
  fullName: Properties.IPropertyDictionary<T>.WithProperty(string, Properties.Value)
  nameWithType.vb: IPropertyDictionary(Of T).WithProperty(String, Value)
  fullName.vb: Properties.IPropertyDictionary(Of T).WithProperty(String, Properties.Value)
  name.vb: WithProperty(String, Value)
  spec.csharp:
  - uid: Properties.IPropertyDictionary{`0}.WithProperty(System.String,Properties.Value)
    name: WithProperty
    href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_WithProperty_System_String_Properties_Value_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Properties.Value
    name: Value
    href: Properties.Value.html
  - name: )
  spec.vb:
  - uid: Properties.IPropertyDictionary{`0}.WithProperty(System.String,Properties.Value)
    name: WithProperty
    href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_WithProperty_System_String_Properties_Value_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Properties.Value
    name: Value
    href: Properties.Value.html
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Properties.IPropertyDictionary`1.WithProperty(System.String,Properties.Value)
  commentId: M:Properties.IPropertyDictionary`1.WithProperty(System.String,Properties.Value)
  isExternal: true
  href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_WithProperty_System_String_Properties_Value_
  name: WithProperty(string, Value)
  nameWithType: IPropertyDictionary<T>.WithProperty(string, Value)
  fullName: Properties.IPropertyDictionary<T>.WithProperty(string, Properties.Value)
  nameWithType.vb: IPropertyDictionary(Of T).WithProperty(String, Value)
  fullName.vb: Properties.IPropertyDictionary(Of T).WithProperty(String, Properties.Value)
  name.vb: WithProperty(String, Value)
  spec.csharp:
  - uid: Properties.IPropertyDictionary`1.WithProperty(System.String,Properties.Value)
    name: WithProperty
    href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_WithProperty_System_String_Properties_Value_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Properties.Value
    name: Value
    href: Properties.Value.html
  - name: )
  spec.vb:
  - uid: Properties.IPropertyDictionary`1.WithProperty(System.String,Properties.Value)
    name: WithProperty
    href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_WithProperty_System_String_Properties_Value_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Properties.Value
    name: Value
    href: Properties.Value.html
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Properties.BasePropertyDictionary`1.WithoutProperty*
  commentId: Overload:Properties.BasePropertyDictionary`1.WithoutProperty
  href: Properties.BasePropertyDictionary-1.html#Properties_BasePropertyDictionary_1_WithoutProperty_System_String_
  name: WithoutProperty
  nameWithType: BasePropertyDictionary<T>.WithoutProperty
  fullName: Properties.BasePropertyDictionary<T>.WithoutProperty
  nameWithType.vb: BasePropertyDictionary(Of T).WithoutProperty
  fullName.vb: Properties.BasePropertyDictionary(Of T).WithoutProperty
- uid: Properties.IPropertyDictionary{{T}}.WithoutProperty(System.String)
  commentId: M:Properties.IPropertyDictionary{`0}.WithoutProperty(System.String)
  parent: Properties.IPropertyDictionary{{T}}
  definition: Properties.IPropertyDictionary`1.WithoutProperty(System.String)
  href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_WithoutProperty_System_String_
  name: WithoutProperty(string)
  nameWithType: IPropertyDictionary<T>.WithoutProperty(string)
  fullName: Properties.IPropertyDictionary<T>.WithoutProperty(string)
  nameWithType.vb: IPropertyDictionary(Of T).WithoutProperty(String)
  fullName.vb: Properties.IPropertyDictionary(Of T).WithoutProperty(String)
  name.vb: WithoutProperty(String)
  spec.csharp:
  - uid: Properties.IPropertyDictionary{`0}.WithoutProperty(System.String)
    name: WithoutProperty
    href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_WithoutProperty_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Properties.IPropertyDictionary{`0}.WithoutProperty(System.String)
    name: WithoutProperty
    href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_WithoutProperty_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Properties.IPropertyDictionary`1.WithoutProperty(System.String)
  commentId: M:Properties.IPropertyDictionary`1.WithoutProperty(System.String)
  isExternal: true
  href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_WithoutProperty_System_String_
  name: WithoutProperty(string)
  nameWithType: IPropertyDictionary<T>.WithoutProperty(string)
  fullName: Properties.IPropertyDictionary<T>.WithoutProperty(string)
  nameWithType.vb: IPropertyDictionary(Of T).WithoutProperty(String)
  fullName.vb: Properties.IPropertyDictionary(Of T).WithoutProperty(String)
  name.vb: WithoutProperty(String)
  spec.csharp:
  - uid: Properties.IPropertyDictionary`1.WithoutProperty(System.String)
    name: WithoutProperty
    href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_WithoutProperty_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Properties.IPropertyDictionary`1.WithoutProperty(System.String)
    name: WithoutProperty
    href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_WithoutProperty_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Properties.Patches.Patch
  commentId: T:Properties.Patches.Patch
  parent: Properties.Patches
  href: Properties.Patches.Patch.html
  name: Patch
  nameWithType: Patch
  fullName: Properties.Patches.Patch
- uid: Properties.BasePropertyDictionary`1.Diff*
  commentId: Overload:Properties.BasePropertyDictionary`1.Diff
  href: Properties.BasePropertyDictionary-1.html#Properties_BasePropertyDictionary_1_Diff__0_
  name: Diff
  nameWithType: BasePropertyDictionary<T>.Diff
  fullName: Properties.BasePropertyDictionary<T>.Diff
  nameWithType.vb: BasePropertyDictionary(Of T).Diff
  fullName.vb: Properties.BasePropertyDictionary(Of T).Diff
- uid: Properties.IPropertyDictionary{{T}}.Diff({T})
  commentId: M:Properties.IPropertyDictionary{`0}.Diff(`0)
  parent: Properties.IPropertyDictionary{{T}}
  definition: Properties.IPropertyDictionary`1.Diff(`0)
  href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_Diff__0_
  name: Diff(T)
  nameWithType: IPropertyDictionary<T>.Diff(T)
  fullName: Properties.IPropertyDictionary<T>.Diff(T)
  nameWithType.vb: IPropertyDictionary(Of T).Diff(T)
  fullName.vb: Properties.IPropertyDictionary(Of T).Diff(T)
  spec.csharp:
  - uid: Properties.IPropertyDictionary{`0}.Diff(`0)
    name: Diff
    href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_Diff__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Properties.IPropertyDictionary{`0}.Diff(`0)
    name: Diff
    href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_Diff__0_
  - name: (
  - name: T
  - name: )
- uid: Properties.Patches
  commentId: N:Properties.Patches
  href: Properties.html
  name: Properties.Patches
  nameWithType: Properties.Patches
  fullName: Properties.Patches
  spec.csharp:
  - uid: Properties
    name: Properties
    href: Properties.html
  - name: .
  - uid: Properties.Patches
    name: Patches
    href: Properties.Patches.html
  spec.vb:
  - uid: Properties
    name: Properties
    href: Properties.html
  - name: .
  - uid: Properties.Patches
    name: Patches
    href: Properties.Patches.html
- uid: Properties.IPropertyDictionary`1.Diff(`0)
  commentId: M:Properties.IPropertyDictionary`1.Diff(`0)
  href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_Diff__0_
  name: Diff(T)
  nameWithType: IPropertyDictionary<T>.Diff(T)
  fullName: Properties.IPropertyDictionary<T>.Diff(T)
  nameWithType.vb: IPropertyDictionary(Of T).Diff(T)
  fullName.vb: Properties.IPropertyDictionary(Of T).Diff(T)
  spec.csharp:
  - uid: Properties.IPropertyDictionary`1.Diff(`0)
    name: Diff
    href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_Diff__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Properties.IPropertyDictionary`1.Diff(`0)
    name: Diff
    href: Properties.IPropertyDictionary-1.html#Properties_IPropertyDictionary_1_Diff__0_
  - name: (
  - name: T
  - name: )
- uid: Properties.BasePropertyDictionary`1.WithProperties*
  commentId: Overload:Properties.BasePropertyDictionary`1.WithProperties
  href: Properties.BasePropertyDictionary-1.html#Properties_BasePropertyDictionary_1_WithProperties_System_Collections_Immutable_ImmutableDictionary_System_String_Properties_Property__
  name: WithProperties
  nameWithType: BasePropertyDictionary<T>.WithProperties
  fullName: Properties.BasePropertyDictionary<T>.WithProperties
  nameWithType.vb: BasePropertyDictionary(Of T).WithProperties
  fullName.vb: Properties.BasePropertyDictionary(Of T).WithProperties
- uid: Properties.BasePropertyDictionary`1.ApplyToProperties*
  commentId: Overload:Properties.BasePropertyDictionary`1.ApplyToProperties
  href: Properties.BasePropertyDictionary-1.html#Properties_BasePropertyDictionary_1_ApplyToProperties_System_Func_System_Collections_Immutable_ImmutableDictionary_System_String_Properties_Property___0__
  name: ApplyToProperties
  nameWithType: BasePropertyDictionary<T>.ApplyToProperties
  fullName: Properties.BasePropertyDictionary<T>.ApplyToProperties
  nameWithType.vb: BasePropertyDictionary(Of T).ApplyToProperties
  fullName.vb: Properties.BasePropertyDictionary(Of T).ApplyToProperties
- uid: System.Func{System.Collections.Immutable.ImmutableDictionary{System.String,Properties.Property},{T}}
  commentId: T:System.Func{System.Collections.Immutable.ImmutableDictionary{System.String,Properties.Property},`0}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<ImmutableDictionary<string, Property>, T>
  nameWithType: Func<ImmutableDictionary<string, Property>, T>
  fullName: System.Func<System.Collections.Immutable.ImmutableDictionary<string, Properties.Property>, T>
  nameWithType.vb: Func(Of ImmutableDictionary(Of String, Property), T)
  fullName.vb: System.Func(Of System.Collections.Immutable.ImmutableDictionary(Of String, Properties.Property), T)
  name.vb: Func(Of ImmutableDictionary(Of String, Property), T)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Collections.Immutable.ImmutableDictionary`2
    name: ImmutableDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutabledictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Properties.Property
    name: Property
    href: Properties.Property.html
  - name: '>'
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Immutable.ImmutableDictionary`2
    name: ImmutableDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutabledictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Properties.Property
    name: Property
    href: Properties.Property.html
  - name: )
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
